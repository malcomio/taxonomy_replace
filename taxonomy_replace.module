<?php


// TODO: add local tab to /taxonomy/term/%
// TODO: 
// TODO: add operations to /admin/structure/taxonomy/manage/%/overview

/**
 * Implements hook_entity_type_build().
 */
function taxonomy_replace_entity_type_build(array &$entity_types) {
  // Add a custom entity form.
  $entity_types['taxonomy_term']->setFormClass('replace', '\Drupal\taxonomy_replace\Form\TaxonomyReplaceForm');
}

/**
 * Load list of taxonomy fields
 */
function _taxonomy_replace_get_fields($node_type) {
  static $taxonomy_fields = [];

  if (!isset($taxonomy_fields[$node_type])) {
    $fields = field_info_instances('node', $node_type);

    foreach ($fields as $name => $field) {
      $field = field_info_field($name);
      if ($field['type'] == 'taxonomy_term_reference') {
        $fields[$name] = $name;
      }
      else {
        unset($fields[$name]);
      }
    }

    $taxonomy_fields[$node_type] = $fields;
  }

  return $taxonomy_fields[$node_type];
}

/**
 * Implementation of hook_node_presave().
 */
function taxonomy_replace_node_presave($node) {
  $taxonomy_fields = _taxonomy_replace_get_fields($node->type);
  $reference_field_prefix = 'field_taxonomy_replace';
  $reference_field_prefix_len = strlen($reference_field_prefix);

  foreach ($taxonomy_fields as $field_name) {
    $langcode = field_language('node', $node, $field_name);
    if (!isset($node->{$field_name}[$langcode])) {
      continue;
    }
    $terms = $node->{$field_name}[$langcode];

    // Walk terms in field
    foreach ($terms as $k => $term) {
      $new_terms = FALSE;
      $terms_tids[$term['tid']] = TRUE;

      // Search for reference field
      foreach ($term as $k => $v) {
        if (preg_match('/^' . preg_quote($reference_field_prefix) . '/', $k) && isset($term[$k][$langcode])) {
          $reference_field = $term[$k][$langcode];
          break;
        }
      }

      if (!isset($reference_field)) {
        continue;
      }

      // Walk new terms references
      foreach ($reference_field as $new_term) {
        if (isset($terms_tids[$new_term['tid']])) // Check duplicates
        {
          continue;
        }
        $new_terms = TRUE;
        $node->{$field_name}[$langcode][] = $new_term; // Add new term
      }

      // Delete replaced term
      if ($new_terms) {
        unset($node->{$field_name}[$langcode][$k]);
      }
    }
  }
}

